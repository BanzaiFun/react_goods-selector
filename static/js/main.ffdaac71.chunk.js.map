{"version":3,"sources":["goods.js","App.tsx","index.tsx"],"names":["App","state","selectedGoods","good","this","find","g","setState","filter","el","className","length","join","type","onClick","goodsFromServer","map","classNames","isSelected","addProp","removeProp","Component","ReactDOM","render","document","getElementById"],"mappings":"8OAAe,GACb,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,U,OCDWA,EAAb,4MACEC,MAAQ,CACNC,cAAe,CAAC,QAFpB,gDAKE,SAAWC,GACT,QAASC,KAAKH,MAAMC,cAAcG,MAAK,SAAAC,GAAC,OAAIA,IAAMH,OANtD,qBASE,SAAQA,GAENC,KAAKG,SAAS,CAAEL,cAAe,CAACC,OAXpC,wBAcE,SAAWA,EAAcF,GACvBG,KAAKG,SAAS,CACZL,cAAeD,EAAMC,cAAcM,QAAO,SAAAC,GAAE,OAAIA,IAAON,SAhB7D,oBAoBE,WAAU,IAAD,OACCD,EAAkBE,KAAKH,MAAvBC,cAER,OACE,uBAAMQ,UAAU,MAAhB,UACE,yBAAQA,UAAU,cAAlB,UACE,qBAAIA,UAAU,aAAd,WACIR,EAAcS,QAAU,sBACvBT,EAAcS,QAAhB,UAA6BT,EAAcU,KAAK,MAAhD,qBAGAV,EAAcS,QACf,wBACEE,KAAK,SACLH,UAAU,aACVI,QAAS,WACP,EAAKP,SAAS,CAAEL,cAAe,MAJnC,sBAYJ,oBAAIQ,UAAU,OAAd,SACGK,EAAgBC,KAAI,SAACb,GAAD,OACnB,mCACE,qBAEEO,UAAWO,IAAW,OACpB,CAAE,eAAgB,EAAKC,WAAWf,KAHtC,UAKGA,GAEE,EAAKe,WAAWf,IACjB,wBAEEU,KAAK,SACLH,UAAU,eACVI,QAAS,kBAAM,EAAKK,QAAQhB,IAJ9B,mCACgBA,IAShB,EAAKe,WAAWf,IAChB,wBAEEU,KAAK,SACLH,UAAU,eACVI,QAAS,kBAAM,EAAKM,WAAWjB,EAAM,EAAKF,QAJ5C,mCACgBE,MAnBbA,iBAhDrB,GAAyBkB,aCNzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ffdaac71.chunk.js","sourcesContent":["export default [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import { Component } from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\nimport goodsFromServer from './goods';\n\ntype State = {\n  selectedGoods: string[];\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  isSelected(good: string): boolean {\n    return !!this.state.selectedGoods.find(g => g === good);\n  }\n\n  addProp(good: string) {\n    // this.setState({ selectedGoods: [...state.selectedGoods, good] });\n    this.setState({ selectedGoods: [good] });\n  }\n\n  removeProp(good: string, state: State) {\n    this.setState({\n      selectedGoods: state.selectedGoods.filter(el => el !== good),\n    });\n  }\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <main className=\"App\">\n        <header className=\"App__header\">\n          <h1 className=\"App__title\">\n            {!selectedGoods.length && 'No goods selected' }\n            {!!selectedGoods.length && `${selectedGoods.join(', ')} is selected` }\n          </h1>\n\n          {!!selectedGoods.length && (\n            <button\n              type=\"button\"\n              className=\"App__clear\"\n              onClick={() => {\n                this.setState({ selectedGoods: [] });\n              }}\n            >\n              Clear\n            </button>\n          )}\n        </header>\n\n        <ul className=\"List\">\n          {goodsFromServer.map((good) => (\n            <>\n              <li\n                key={good}\n                className={classNames('Good',\n                  { 'Good--active': this.isSelected(good) })}\n              >\n                {good}\n\n                { !this.isSelected(good) && (\n                  <button\n                    key={`button${good}`}\n                    type=\"button\"\n                    className=\"Good__select\"\n                    onClick={() => this.addProp(good)}\n                  >\n                    Select\n                  </button>\n                ) }\n\n                { this.isSelected(good) && (\n                  <button\n                    key={`button${good}`}\n                    type=\"button\"\n                    className=\"Good__remove\"\n                    onClick={() => this.removeProp(good, this.state)}\n                  >\n                    Remove\n                  </button>\n                ) }\n              </li>\n            </>\n          ))}\n        </ul>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}